name: Kernel Build Main From my phone

on:
  push:
    branches:
      - UNDERVOLTHACK
  pull_request:
    branches:
      - UNDERVOLTHACK
  workflow_dispatch:

jobs:
  build:
      
    runs-on: ubuntu-latest
    env:
      ARCH: arm64
      SUBARCH: arm64
      CROSS_COMPILE: aarch64-linux-gnu-
      CROSS_COMPILE_ARM32: arm-linux-gnueabi-
      LD: ld.lld

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Check space before cleanup
        run: |
          echo "Free space:"
          df -h
          sudo chown runner /mnt

      - name: Cleanup
        run: |
          docker images
          sudo rm -rf "/home/work/*" || true
          sudo rm -rf "/opt/*" || true
          sudo rm -rf "/usr/share/dotnet" || true
          sudo rm -rf "$AGENT_TOOLSDIRECTORY" || true
          sudo rm -rf "/usr/local/lib/android" || true
          sudo rm -rf "/usr/local/share/boost" || true
          sudo rm -rf "/usr/lib/jvm" || true
          sudo rm -rf "/usr/share/swift" || true
          sudo rm -rf "/usr/local/julia*" || true
          sudo rm -rf "/usr/share/kotlinc" || true
          sudo rm -rf "/usr/local/share/edge_driver" || true
          sudo rm -rf "/usr/local/share/chromedriver-linux64" || true
          sudo rm -rf "/usr/local/share/gecko_driver" || true
          sudo rm -rf "/usr/share/miniconda" || true
          sudo rm -rf "/usr/local/share/phantomjs*" || true
          sudo rm -rf "/usr/share/sbt" || true
          sudo rm -rf "/usr/local/sqlpackage" || true
          sudo rm -rf "/usr/bin/yq" || true
          sudo rm -rf "/usr/local/share/vcpkg" || true
          sudo rm -rf "/usr/local/bin/terraform" || true
          sudo rm -rf "/usr/local/bin/stack" || true
          sudo rm -rf "/usr/local/bin/aliyun" || true
          sudo rm -rf "/usr/local/bin/pulumi" || true
          sudo rm -rf "/usr/local/bin/pulumi-language-dotnet" || true
          sudo rm -rf "/usr/local/bin/azcopy" || true
          sudo rm -rf "/usr/local/aws-cli" || true
          sudo rm -rf "/usr/local/bin/bicep" || true
          sudo rm -rf "/usr/local/bin/rebar3" || true
          sudo rm -rf "/usr/local/bin/phpunit" || true
          sudo rm -rf "/usr/local/bin/packer" || true
          sudo rm -rf "/usr/local/bin/bicep" || true
          sudo rm -rf "/usr/local/bin/docker-compose" || true
          sudo rm -rf "/home/.dotnet/tools" || true
          sudo rm -rf "/etc/skel/.dotnet/tools" || true
          sudo rm -rf "/usr/local/bin/minikube" || true
          sudo rm -rf "/usr/local/bin/kustomize" || true
          sudo rm -rf "/usr/local/bin/kubectl" || true
          sudo rm -rf "/usr/local/bin/kind" || true
          sudo rm -rf "/usr/local/bin/helm" || true
          sudo rm -rf "/home/linuxbrew" || true
          sudo rm -rf "/usr/share/apache-maven-3.8.8" || true
          sudo rm -rf "/usr/share/gradle-8.7" || true
          sudo rm -rf "/usr/local/share/phantomjs-8.6" || true
          sudo rm -rf "/usr/local/bin/azcopy_11.3.1" || true
          sudo rm -rf "/usr/local/bin/bicep" || true
          sudo rm -rf "/usr/local/bin/.ghcup" || true
          sudo rm -rf "/usr/local/.ghcup" || true
          sudo rm -rf "/home/.nvm" || true
          sudo rm -rf "/usr/bin/composer" || true
          sudo rm -rf "/usr/local/bin/phpunit" || true
          sudo rm -rf "/usr/local/bin/pulumi-analyzer-policy" || true
          sudo rm -rf "/usr/local/bin/pulumi-analyzer-policy-python" || true
          sudo rm -rf "/usr/local/bin/pulumi-language-java" || true
          sudo rm -rf "/usr/local/bin/pulumi-language-nodejs" || true
          sudo rm -rf "/usr/local/bin/pulumi-language-go" || true
          sudo rm -rf "/usr/local/bin/pulumi-language-python" || true
          sudo rm -rf "/usr/local/bin/pulumi-language-python-exec" || true
          sudo rm -rf "/usr/local/bin/pulumi-language-yaml" || true
          sudo rm -rf "/usr/local/bin/pulumi-resource-pulumi-nodejs" || true
          sudo rm -rf "/usr/local/bin/pulumi-resource-pulumi-python" || true
          sudo rm -rf "/usr/local/bin/pulumi-watch" || true
          sudo rm -rf "/usr/local/bin/oc" || true
          sudo rm -rf "/usr/local/bin/ctest" || true
          sudo rm -rf "/usr/local/bin/cmake-gui" || true
          sudo rm -rf "/usr/local/bin/ccmake" || true
          sudo rm -rf "/usr/local/bin/cpack" || true
          sudo rm -rf "/usr/local/bin/oras" || true
          sudo rm -rf "/usr/local/share/emacs" || true
          sudo rm -rf "/usr/local/share/fonts" || true
          sudo rm -rf "/usr/local/share/icons" || true
          sudo rm -rf "/usr/local/share/man" || true
          sudo rm -rf "/usr/local/share/chromium" || true
          sudo rm -rf "/usr/local/share/powershell" || true
          sudo rm -rf "/usr/local/share/doc" || true
          sudo rm -rf "/home/perflog" || true
          sudo rm -rf "/usr/libexec/docker/cli-plugins" || true
          sudo rm -rf "/usr/bin/docker-credential-ecr-login" || true
          sudo rm -rf "/usr/local/lib/lein" || true
          sudo docker image prune --all --force
          sudo npm uninstall bazel || true
          sudo npm uninstall bazelisk || true
          rustup self uninstall -y
          sudo apt purge \
            ansible \
            aria2 \
            azure-cli \
            cabal* \
            clang* \
            dotnet-sdk* \
            ghc* \
            google-chrome-stable \
            kubectl \
            mysql* \
            node* \
            npm* \
            php* \
            powershell \
            rpm \
            ruby* \
            subversion \
            yarn \
            firefox \
            mono-complete \
            nuget \
            apache2 \
            moby-engine \
            moby-cli \
            moby-buildx \
            moby-compose \
            microsoft-edge-stable \
            mongodb* \
            nginx \
            postgresql* \
            libpq-dev \
            r-base \
            sphinxsearch \
            swig \
            tcl \
            temurin-* \
            skopeo \
            imagemagick-* \
            mssql-tools* \
            unixodbc-dev \
            ubuntu-advantage-tools \
            docker-* \
            fonts-* \
            llvm-* \
            javascript-common \
            openjdk-11-jre-headless \
            linux-cloud-tools* \
            linux-azure-6.2-* \
            hicolor-icon-theme \
            gcc-9 \
            gcc-10 \
            gcc-11 \
            gcc-12 \
            cloud-initramfs* \
            x11-* \
            bind9-* \
            cloud-* \
            gir1.2-* \
            golang-github-* \
            libjs-* \
            libllvm* \
            nano \
            python3-* \
            podman \
            buildah \
            skopeo \
            temurin-* \
            ant \
            ant-optional \
            libmysqlclient-dev \
            libxft-dev \
            libfreetype6-dev \
            libfontconfig1-dev \
            libpq-dev \
            tcl* \
            p7zip* \
            gfortran-13 \
            gcc-12-* \
            gcc-11-* \
            google-cloud-cli \
            heroku \
            snmp \
            liblz4-dev \
            man-db \
            packages-microsoft-prod \
            perl \
            *-dev \
            linux-headers-* \
            manpages \
            -yq || true
          sudo dpkg -r packages-microsoft-prod　> /dev/null 2>&1 || true
          sudo apt-get autoremove -y > /dev/null 2>&1 || true
          sudo apt-get autoclean -y > /dev/null 2>&1 || true
          apt list --installed
          ls -al /usr/local/share

      - name: Post process
        run: |
          echo "Free space:"
          df -h
          cat /etc/fstab
          
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4
        with:
          ref: UNDERVOLTHACK

      - name: 必要なパッケージをインストール
        run: |
          sudo apt update
          sudo apt install -y git bc bison flex libssl-dev make clang lld lldb python3 \
                              binutils-aarch64-linux-gnu binutils-arm-linux-gnueabi \
                              llvm

      - name: ツールチェーンをダウンロード
        run: |
          mkdir -p $HOME/kernel
          cd $HOME/kernel
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 clang
          git clone --depth=1 https://github.com/arter97/arm64-gcc.git gcc
          git clone --depth=1 https://github.com/arter97/arm32-gcc.git gcc32
          
      - name: 環境変数の設定
        run: |
          echo "PATH=$HOME/kernel/clang/bin:$HOME/kernel/gcc/bin:$HOME/kernel/gcc32/bin:$PATH" >> $GITHUB_ENV
          echo "PATH=/usr/lib/llvm-14/bin:$PATH" >> $GITHUB_ENV  # LLVM の PATH を追加

      - name: カーネルをビルド
        run: |
          cd kernel
          make CC=clang LLVM=1 LLVM_IAS=1 LD=ld.lld O=out -j$(nproc --all)
          
      - name: ビルド成果物をアップロード
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build-Main
          path: |
            kernel/out/drivers/cpufreq/qcom-cpufreq-hw.ko
            kernel/out/drivers/soc/qcom/dcvs/qcom-dcvs.ko
