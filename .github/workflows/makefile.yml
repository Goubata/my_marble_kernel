name: Kernel Build Main 

on:
  push:
    branches:
      - OC2
  pull_request:
    branches:
      - OC2
  workflow_dispatch:

jobs:
  build:
  
    runs-on: ubuntu-latest
    env:
      ARCH: arm64
      SUBARCH: arm64
      CROSS_COMPILE: aarch64-linux-gnu-
      CROSS_COMPILE_ARM32: arm-linux-gnueabi-
      LD: ld.lld

    steps:
      - name: リポジトリをチェックアウト
        uses: actions/checkout@v4
        with:
          ref: OC2

      - name: 必要なパッケージをインストール
        run: |
          sudo apt update
          sudo apt install -y git bc bison flex libssl-dev make clang lld lldb python3 \
                              binutils-aarch64-linux-gnu binutils-arm-linux-gnueabi \
                              llvm

      - name: ツールチェーンをダウンロード
        run: |
          mkdir -p $HOME/kernel
          cd $HOME/kernel
          git clone --depth=1 https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86 clang
          git clone --depth=1 https://github.com/arter97/arm64-gcc.git gcc
          git clone --depth=1 https://github.com/arter97/arm32-gcc.git gcc32
          
      - name: 環境変数の設定
        run: |
          echo "PATH=$HOME/kernel/clang/bin:$HOME/kernel/gcc/bin:$HOME/kernel/gcc32/bin:$PATH" >> $GITHUB_ENV
          echo "PATH=/usr/lib/llvm-14/bin:$PATH" >> $GITHUB_ENV  # LLVM の PATH を追加

      - name: カーネルをビルド
        run: |
          cd kernel
          make clean && make mrproper
          make CC=clang LD=ld.lld LLVM=1 O=out marble_defconfig
          make CC=clang LLVM=1 LLVM_IAS=1 LD=ld.lld O=out -j$(nproc --all)
          
      - name: ビルド成果物をアップロード
        uses: actions/upload-artifact@v4
        with:
          name: kernel-build-Main
          path: |
            out/arch/arm64/boot/Image.gz-dtb
            out/drivers/cpufreq/qcom-cpufreq-hw.ko
